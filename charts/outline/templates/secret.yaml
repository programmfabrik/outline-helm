apiVersion: v1
kind: Secret
metadata:
  name: {{ include "outline.fullname" . }}-app-s3
  labels:
    {{- include "outline.labels" . | nindent 4 }}
type: Opaque
stringData:
  {{ if .Values.minio.enabled }}
  AWS_ACCESS_KEY_ID: '{{ (index .Values.minio.users 0).accessKey }}'
  AWS_SECRET_ACCESS_KEY: '{{ (index .Values.minio.users 0).secretKey }}'
  AWS_REGION: 'us-east-1'
  AWS_S3_UPLOAD_BUCKET_URL: '{{ if eq (len .Values.minio.ingress.tls) 0 }}http{{ else }}https{{ end }}://{{ (index .Values.minio.ingress.hosts 0) }}'
  AWS_S3_UPLOAD_BUCKET_NAME: '{{ (index .Values.minio.buckets 0).name }}'
  AWS_S3_UPLOAD_MAX_SIZE: '{{ .Values.outline.s3.maxUploadSize }}'
  AWS_S3_FORCE_PATH_STYLE: 'true'
  AWS_S3_ACL: 'private'
  {{ else }}
  AWS_ACCESS_KEY_ID: '{{ .Values.outline.s3.accessKey }}'
  AWS_SECRET_ACCESS_KEY: '{{ .Values.outline.s3.secretKey }}'
  AWS_REGION: '{{ .Values.outline.s3.region }}'
  AWS_S3_UPLOAD_BUCKET_URL: '{{ .Values.outline.s3.endpoint }}'
  AWS_S3_UPLOAD_BUCKET_NAME: '{{ .Values.outline.s3.bucket }}'
  AWS_S3_UPLOAD_MAX_SIZE: '{{ .Values.outline.s3.maxUploadSize }}'
  AWS_S3_FORCE_PATH_STYLE: '{{ .Values.outline.s3.forcePathStyle }}'
  AWS_S3_ACL: '{{ .Values.outline.s3.acl }}'
  {{ end }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "outline.fullname" . }}-app-db
  labels:
    {{- include "outline.labels" . | nindent 4 }}
type: Opaque
stringData:
  {{ if (index .Values "postgresql-ha" "enabled") }}
  # outline does not support &password= in the connection string
  # DATABASE_URL: 'postgres://{{ index .Values "postgresql-ha" "postgresql" "username" }}@{{ include "outline.fullname" . }}-postgresql-ha-pgpool.{{ .Release.Namespace }}.svc:5432/{{ index .Values "postgresql-ha" "postgresql" "database" }}?sslmode=disable&password={{ index .Values "postgresql-ha" "postgresql" "password" }}'
  DATABASE_URL: 'postgres://{{ index .Values "postgresql-ha" "postgresql" "username" }}:{{ index .Values "postgresql-ha" "postgresql" "password" }}@{{ include "outline.fullname" . }}-postgresql-ha-pgpool.{{ .Release.Namespace }}.svc:5432/{{ index .Values "postgresql-ha" "postgresql" "database" }}?sslmode=disable&application_name=outline'
  PGSSLMODE: "allow"
  {{ else }}
  # outline does not support &password= in the connection string
  # DATABASE_URL: 'postgres://{{ .Values.outline.db.user }}@{{ .Values.outline.db.host }}:5432/{{ .Values.outline.db.database }}?sslmode={{ .Values.outline.db.sslmode }}&password={{ .Values.outline.db.password }}'
  DATABASE_URL: 'postgres://{{ .Values.outline.db.user }}:{{ .Values.outline.db.password }}@{{ .Values.outline.db.host }}:5432/{{ .Values.outline.db.database }}?sslmode={{ .Values.outline.db.sslmode }}&application_name=outline'
  PGSSLMODE: "{{ .Values.outline.db.sslmode }}"
  {{ end }}
  DATABASE_CONNECTION_POOL_MIN: '{{ .Values.outline.db.connectionPoolMin }}'
  DATABASE_CONNECTION_POOL_MAX: '{{ .Values.outline.db.connectionPoolMax }}'
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "outline.fullname" . }}-app-redis
  labels:
    {{- include "outline.labels" . | nindent 4 }}
type: Opaque
stringData:
  {{ if .Values.redis.enabled }}
  REDIS_URL: 'redis://{{ include "outline.fullname" . }}-{{ .Values.redis.projectName }}-master.{{ .Release.Namespace }}.svc:6379'
  {{ else }}
  REDIS_URL: '{{ .Values.outline.redis.url }}'
  {{ end }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "outline.fullname" . }}-app-mail
  labels:
    {{- include "outline.labels" . | nindent 4 }}
type: Opaque
stringData:
  {{ if .Values.outline.mail }}
  SMTP_HOST: '{{ .Values.outline.mail.host }}'
  SMTP_PORT: '{{ .Values.outline.mail.port }}'
  SMTP_USERNAME: '{{ .Values.outline.mail.user }}'
  SMTP_PASSWORD: '{{ .Values.outline.mail.password }}'
  SMTP_FROM_EMAIL: '{{ .Values.outline.mail.from }}'
  SMTP_SECURE: '{{ .Values.outline.mail.secure }}'
  {{ end }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "outline.fullname" . }}-app-authentication
  labels:
    {{- include "outline.labels" . | nindent 4 }}
type: Opaque
stringData:
  {{ if .Values.outline.authentication.google }}
  GOOGLE_CLIENT_ID: '{{ .Values.outline.authentication.google.clientId }}'
  GOOGLE_CLIENT_SECRET: '{{ .Values.outline.authentication.google.clientSecret }}'
  {{ end }}
  {{ if .Values.outline.authentication.azure }}
  AZURE_CLIENT_ID: '{{ .Values.outline.authentication.azure.clientId }}'
  AZURE_CLIENT_SECRET: '{{ .Values.outline.authentication.azure.clientSecret }}'
  AZURE_RESOURCE_APP_ID: '{{ .Values.outline.authentication.azure.app_id }}'
  {{ end }}
  {{ if .Values.outline.authentication.azure }}
  AZURE_CLIENT_ID: '{{ .Values.outline.authentication.azure.clientId }}'
  AZURE_CLIENT_SECRET: '{{ .Values.outline.authentication.azure.clientSecret }}'
  AZURE_RESOURCE_APP_ID: '{{ .Values.outline.authentication.azure.app_id }}'
  {{ end }}
  {{ if .Values.outline.authentication.slack }}
  SLACK_KEY: '{{ .Values.outline.authentication.slack.key }}'
  SLACK_SECRET: '{{ .Values.outline.authentication.slack.secret }}'
  {{ end }}
  {{ if .Values.outline.authentication.oidc }}
  OIDC_CLIENT_ID: '{{ .Values.outline.authentication.oidc.clientID }}'
  OIDC_CLIENT_SECRET: '{{ .Values.outline.authentication.oidc.clientSecret }}'
  OIDC_AUTH_URI: '{{ .Values.outline.authentication.oidc.authURI }}'
  OIDC_TOKEN_URI: '{{ .Values.outline.authentication.oidc.tokenURI }}'
  OIDC_USERINFO_URI: '{{ .Values.outline.authentication.oidc.userInfoURI }}'
  OIDC_USERNAME_CLAIM: '{{ .Values.outline.authentication.oidc.usernameClaim }}'
  OIDC_DISPLAY_NAME: '{{ .Values.outline.authentication.oidc.displayName }}'
  OIDC_SCOPES: '{{ .Values.outline.authentication.oidc.scopes }}'
  {{ end }}
  {{ if .Values.outline.authentication.gitlab }}
  OIDC_AUTH_URI: '{{ .Values.outline.authentication.gitlab.authURI }}'
  OIDC_TOKEN_URI: '{{ .Values.outline.authentication.gitlab.tokenURI }}'
  OIDC_USERINFO_URI: '{{ .Values.outline.authentication.gitlab.userInfoURI }}'
  OIDC_USERNAME_CLAIM: '{{ .Values.outline.authentication.gitlab.usernameClaim }}'
  OIDC_DISPLAY_NAME: '{{ .Values.outline.authentication.gitlab.displayName }}'
  OIDC_SCOPES: '{{ .Values.outline.authentication.gitlab.scopes }}'
  {{ end }}
  {{ if .Values.outline.authentication.saml }}
  SAML_SSO_ENDPOINT: '{{ .Values.outline.authentication.saml.ssoEndpoint }}'
  SAML_CERT: '{{ .Values.outline.authentication.saml.cert }}'
  {{ end }}
  {{ if .Values.outline.authentication.saml }}
  SAML_SSO_ENDPOINT: '{{ .Values.outline.authentication.saml.ssoEndpoint }}'
  SAML_CERT: '{{ .Values.outline.authentication.saml.cert }}'
  {{ end }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "outline.fullname" . }}-app-integration
  labels:
    {{- include "outline.labels" . | nindent 4 }}
type: Opaque
stringData:
  {{ if .Values.outline.integration.slack }}
  SLACK_VERIFICATION_TOKEN: '{{ .Values.outline.integration.slack.token }}'
  SLACK_APP_ID: '{{ .Values.outline.integration.slack.appID }}'
  SLACK_MESSAGE_ACTIONS: '{{ .Values.outline.integration.slack.message }}'
  {{ end }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "outline.fullname" . }}-app-utils
  labels:
    {{- include "outline.labels" . | nindent 4 }}
type: Opaque
stringData:
  SECRET_KEY: '{{ .Values.outline.secrets.key }}'
  UTILS_SECRET: '{{ .Values.outline.secrets.secret }}'
