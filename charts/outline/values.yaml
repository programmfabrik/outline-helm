# Default values for outline.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# minio deployment (s3 storage)
minio:
  # configuration from: https://github.com/minio/minio/blob/master/helm/minio/values.yaml
  enabled: true
  replicas: 3
  projectName: minio
  image:
    repository: quay.io/minio/minio
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "RELEASE.2022-09-01T23-53-36Z"
  rootUser: minio
  rootPassword: minio123
  persistence:
    enabled: true
    storageClass: ""
    accessMode: ReadWriteOnce
    size: 50Gi
  ingress:
    enabled: true
    ingressClassName: "nginx"
    labels: {}
      # node-role.kubernetes.io/ingress: platform
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
      # kubernetes.io/ingress.allow-http: "false"
      # kubernetes.io/ingress.global-static-ip-name: ""
      # nginx.ingress.kubernetes.io/secure-backends: "true"
      # nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
      # nginx.ingress.kubernetes.io/whitelist-source-range: 0.0.0.0/0
    path: /
    # the first host will be used as the S3 endpoint for outline
    hosts: ["minio.localhost", "*.minio.localhost"]
    #  - minio-example.local
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local
  consoleIngress:
    enabled: true
    ingressClassName: "nginx"
    labels: {}
      # node-role.kubernetes.io/ingress: platform
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
      # kubernetes.io/ingress.allow-http: "false"
      # kubernetes.io/ingress.global-static-ip-name: ""
      # nginx.ingress.kubernetes.io/secure-backends: "true"
      # nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
      # nginx.ingress.kubernetes.io/whitelist-source-range: 0.0.0.0/0
    path: /
    hosts: ["console.minio.localhost"]
    #  - console.minio-example.local
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local
  resources:
    requests:
      memory: 1Gi
      cpu: 100m
  users:
    # the first user will be used as ouline user
    - accessKey: outline
      secretKey: outlinesecret123
      policy: outlinebucketrw
  buckets:
    - name: outline
      policy: none
      purge: false
      versioning: true
      objectlocking: false
  policies:
    - name: outlinebucketrw
      statements:
        - resources:
          - 'arn:aws:s3:::outline/*'
          actions:
          - 's3:*'
          conditions:
            - StringEquals: '"aws:username": "outline"'

# postgresql deployment
postgresql-ha:
  enabled: true
  pgpool:
    adminUsername: outline
    adminPassword: outline
    tls:
      enabled: true
      autoGenerated: true
  postgresql:
    image:
      registry: docker.io
      repository: bitnami/postgresql-repmgr
      tag: 14.5.0-debian-11-r13
    resources:
      requests:
        memory: 512Mi
        cpu: 250m
      limits:
        memory: 2Gi
        cpu: 2000m
    username: outline
    password: outline
    database: outline
  persistence:
    enabled: true
    storageClass: ""
    accessModes:
    - ReadWriteOnce
    size: 10Gi
# redis deployment
redis:
  enabled: true
  projectName: redis
  auth:
    enabled: false
  master:
    persistence:
      enabled: true
      storageClass: ""
      accessModes:
      - ReadWriteOnce
      size: 10Gi
  replica:
    replicaCount: 3
    persistence:
      enabled: true
      storageClass: ""
      accessModes:
      - ReadWriteOnce
      size: 10Gi

replicaCount: 1

image:
  repository: outlinewiki/outline
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "0.66.0"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 3000

ingress:
  enabled: true
  className: "nginx"
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
    # cert-manager.io/cluster-issuer: letsencrypt-prod
  hosts:
    - host: localhost
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 5
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

outline:
  # The database configuration used to connect outline to a postgres database.
  db:
    # The database username.
    user: outline
    # The database password.
    password: outline
    # The database name.
    database: outline
    # The database host.
    host: "postgres"
    # The database port.
    port: 5432
    # The database ssl-mode.
    sslmode: disable
    # The database minimum connection pool size.
    connectionPoolMin: 2
    # The database maximum connection pool size.
    connectionPoolMax: 10
  redis:
    # For redis you can either specify an ioredis compatible url like: redis://localhost:6379
    # or alternatively, if you would like to provide addtional connection options,
    # use a base64 encoded JSON connection option object. Refer to the ioredis documentation
    # for a list of available options.
    # Example: Use Redis Sentinel for high availability
    # {"sentinels":[{"host":"sentinel-0","port":26379},{"host":"sentinel-1","port":26379}],"name":"mymaster"}
    # example: ioredis://eyJzZW50aW5lbHMiOlt7Imhvc3QiOiJzZW50aW5lbC0wIiwicG9ydCI6MjYzNzl9LHsiaG9zdCI6InNlbnRpbmVsLTEiLCJwb3J0IjoyNjM3OX1dLCJuYW1lIjoibXltYXN0ZXIifQ==
    url: redis://redis:6379
  s3:
    # The AWS S3 bucket name
    bucket: "outline"
    # The AWS S3 bucket region
    region: "us-east-1"
    # The AWS S3 bucket access key
    accessKey: "outline"
    # The AWS S3 bucket secret key
    secretKey: "outline"
    # The AWS S3 bucket endpoint
    endpoint: "minio:9000"
    # The AWS S3 bucket ACL
    acl: "private"
    # The AWS S3 bucket prefix
    prefix: ""
    # The AWS S3 max file size in bytes
    maxUploadSize: "10000000"
    # Whether to force path style URLs
    forcePathStyle: false
  mail: {}
    # # The SMTP host
    # host: ""
    # # The SMTP port
    # port: 587
    # # The SMTP username
    # user: ""
    # # The SMTP password
    # pass: ""
    # # The SMTP from address
    # from: ""
    # # The SMTP address the user can reply to
    # reply_email: ""
    # # The SMTP ciphers to use
    # tls_ciphers: ""
    # # The SMTP secure connection
    # secure: false
  authentication:
    google: {}
      # # The Google OAuth client ID
      # clientId: ""
      # # The Google OAuth client secret
      # clientSecret: ""
    azure: {}
      # # The Azure OAuth client ID
      # clientId: ""
      # # The Azure OAuth client secret
      # clientSecret: ""
      # # The Azure OAuth tenant ID
      # app_id: ""
    slack: {}
      # # The Slack OAuth key
      # key: ""
      # # The Slack OAuth secret
      # secret: ""
    oidc: {}
      # # The OIDC client ID
      # clientID: ""
      # # The OIDC client secret
      # clientSecret: ""
      # # The OIDC issuer URL
      # authURI: ""
      # # The OIDC token URL
      # tokenURI: ""
      # # The OIDC user info URL
      # userInfoURI: ""
      # # The OIDC username claim
      # usernameClaim: ""
      # # The OIDC displayname claim
      # displayName: ""
      # # The OIDC claims
      # scopes: ""
    gitlab: {}
      # # The Gitlab OAuth authentication URL
      # authURI: ""
      # # The Gitlab OAuth token URL
      # tokenURI: ""
      # # The Gitlab OAuth user info URL
      # userInfoURI: ""
      # # The Gitlab OAuth username claim
      # usernameClaim: ""
      # # The Gitlab OAuth displayname claim
      # displayName: ""
      # # The Gitlab OAuth scopes
      # scopes: ""
    saml: {}
      # # The SAML sso endpoint URL
      # ssoEndpoint: ""
      # # The SAML sso certificate
      # cert: ""
  integration:
    slack: {}
      # # The Slack verification token
      # token: ""
      # # The Slack app ID
      # appID: ""
      # # Whether to enable Slack message notifications
      # message: true
  config:
    # Comma separated list of domains to be allowed to signin to the wiki. If not
    # set, all domains are allowed by default when using Google OAuth to signin
    allowedDomains: ""
    # See [documentation](docs/SERVICES.md) on running a separate collaboration
    # server, for normal operation this does not need to be set.
    collaborationURL: ""
    # Configures the modules to be logged to the console.
    # sql,cache,presenters,events,importer,exporter,emails,mailer,http
    debug: http
    # The default interface language. See translate.getoutline.com for a list of
    # available language codes and their rough percentage translated.
    defaultLanguage: en_US
    # Have the installation check for updates by sending anonymized statistics to
    # the maintainers
    enableUpdates: false
    # Auto-redirect to https in production. The default is true but you may set to
    # false if you can be sure that SSL is terminated at an external loadbalancer.
    forceHTTPS: false
    # Optionally enable google analytics to track pageviews in the knowledge base
    googleAnalyticsId: ""
    # Override the maxium size of document imports, could be required if you have
    # especially large Word documents with embedded imagery
    maxImportSize: 5120000
    # Optionally enable Sentry (sentry.io) to track errors and performance
    sentryDSN: ""
    # Custom logo that displays on the authentication screen, scaled to height=60px
    teamLogo: ""
    # URL should point to the fully qualified, publicly accessible URL. If using a
    # proxy the port in URL and PORT may be different.
    url: "http://localhost"
    # How many processes should be spawned. As a reasonable rule divide your servers
    # available memory by 512 for a rough estimate
    webConcurrency: 1
  secrets:
    # Generate a hex-encoded 32-byte random key. You should use `openssl rand -hex 32`
    # in your terminal to generate a random value.
    #
    # Please note that this value should be kept secret and should not be shared with anyone.
    # We recommend to change this value before deploying Outline.
    key: "3c510bcb7d0c4891f7142980a7738a09581546d1ed256603ae87a910d84c61b2"
    # Generate a unique random key. The format is not important but you could still use
    # `openssl rand -hex 32` in your terminal to produce this.
    #
    # Please note that this value should be kept secret and should not be shared with anyone.
    # We recommend to change this value before deploying Outline.
    secret: "b135928dd54c072bc8d7ebf1b1af76954d4dd657276f05cb58d81d4da3177ac9"
  # certTrusts defines a list of certificates that must be trusted to work with tls.
  # Based on this setting, we create an init container that adds the certTrusts entries to the /etc/ssl/certs/ca-certificates.crt file.
  # We expect the value to be in the format key=value.
  # The key should be the name of the certificate and the value should be the actual certificate.
  certTrusts: {}
